apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "origin-public-ip.app.name" . }}
  labels:
    app: {{ include "origin-public-ip.app.name" . }}
  namespace: production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "origin-public-ip.app.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "origin-public-ip.app.name" . }}
    spec:
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 80
      containers:
      - name: {{ include "origin-public-ip.app.name" . }}
        securityContext:
          runAsNonRoot: true          
          runAsUser: 65532   
          runAsGroup: 65532   
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop: ["ALL"]       
        image: "{{ .Values.image.name }}:{{ .Values.image.tag}}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - name: http
            containerPort: {{ .Values.app.containerPort }}
        startupProbe:
          {{- toYaml (default .Values.app.defaultProbe .Values.app.startupProbe) | nindent 12 }}
        readinessProbe:
          {{- toYaml (default .Values.app.defaultProbe .Values.app.readinessProbe) | nindent 12 }}
        livenessProbe:
          {{- toYaml (default .Values.app.defaultProbe .Values.app.livenessProbe) | nindent 12 }}
        resources:
          {{- toYaml .Values.app.resources | nindent 12 }}
