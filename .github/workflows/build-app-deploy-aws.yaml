name: Deploy AWS Origin-public-ip

on:
  push:
    branches:
    - 'staging'

env:
  AWS_REGION: 'eu-west-1'
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  EKS_CLUSTER_NAME: 'my-cluster'
  IMAGE: origin-public-ip
  IMAGE_TAG: latest
  ECR_REPO: 'origin-public-ip'

jobs:
  setup-and-build:
    name: Setup, Build, Publish
    runs-on: ubuntu-latest
    environment: staging

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Configure AWS credentials for ECR
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag 377877851685.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:${{ env.IMAGE_TAG }} \
          .

    # Push the Docker image to Amazon ECR
    - name: Publish
      run: |-
        aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin 377877851685.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
        docker push 377877851685.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:${{ env.IMAGE_TAG }}

    # Install kubectl and configure kubeconfig for EKS
    - name: Install kubectl and Configure Kubeconfig
      run: |
        curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl

    # Deploy using Helm
    - name: Install Helm
      run: |
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh

    - name: Deploy on EKS
      run: |-
        cd helm-chart/origin-public-ip
        rm -fr charts/*
        rm -fr out/
        helm lint
        helm package -d charts .
        aws eks update-kubeconfig --name my-cluster-1 --region eu-west-1
        echo 'KUBE_CONFIG_DATA<<EOF' >> $GITHUB_ENV
        echo $(cat ./kubeconfig | base64) >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV

        # helm upgrade $IMAGE $(ls charts/$IMAGE-*.tgz) \
        #       --atomic --install

    - name: Show PWD on new run
      run: |-
        echo $(pwd)
        tar -xvzf helm-chart/origin-public-ip/charts/$IMAGE-*.tgz
        ls helm-chart/origin-public-ip/charts/

    # - name: helm deploy
    #   uses: koslib/helm-eks-action@master
    #   env:
    #     KUBE_CONFIG_DATA: ${{ env.KUBE_CONFIG_DATA }}
    #   with:
    #     command: |-
    #       cd helm-chart/origin-public-ip && pwd &&
    #       helm upgrade $IMAGE $(ls charts/$IMAGE-*.tgz) \
    #           --atomic --install

    - name: Deploy Helm
      uses: bitovi/github-actions-deploy-eks-helm@v1.2.9
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1
        cluster-name: my-cluster-1
        cluster-role-arn: ${{ secrets.AWS_ROLE_ARN }}
        chart-path: helm-chart/origin-public-ip/
        namespace: production
        values: key1=value1,key2=value2
        name: origin-public-ip
